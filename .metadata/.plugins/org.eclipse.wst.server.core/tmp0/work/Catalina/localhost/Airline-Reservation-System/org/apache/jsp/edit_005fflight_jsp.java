/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-04-11 09:05:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class edit_005fflight_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Edit Flight</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\"> <!-- Link to your CSS -->\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Optional inline style in case you need page-specific tweaks */\r\n");
      out.write("        .form-container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 40px auto;\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            background: #ffffffdd;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin: 10px 0 5px;\r\n");
      out.write("            color: #444;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form input {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            margin-bottom: 12px;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: green;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: green;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: green;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .error {\r\n");
      out.write("            color: red;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"form-container\">\r\n");
      out.write("        <h2>Edit Flight</h2>\r\n");
      out.write("        ");

            String flight_id = request.getParameter("flight_id");
            Connection conn = null;
            PreparedStatement stmt = null;
            ResultSet rs = null;

            if (flight_id != null) {
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airline", "root", "root");
                    stmt = conn.prepareStatement("SELECT * FROM flights WHERE flight_id = ?");
                    stmt.setInt(1, Integer.parseInt(flight_id));
                    rs = stmt.executeQuery();

                    if (rs.next()) {
        
      out.write("\r\n");
      out.write("        <form action=\"edit_flight.jsp\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"flight_id\" value=\"");
      out.print( rs.getInt("flight_id") );
      out.write("\">\r\n");
      out.write("            <label>Flight Number:</label>\r\n");
      out.write("            <input type=\"text\" name=\"flightnumber\" value=\"");
      out.print( rs.getString("flightnumber") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Airline Name:</label>\r\n");
      out.write("            <input type=\"text\" name=\"airline_name\" value=\"");
      out.print( rs.getString("airline_name") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Source:</label>\r\n");
      out.write("            <input type=\"text\" name=\"source\" value=\"");
      out.print( rs.getString("source") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Destination:</label>\r\n");
      out.write("            <input type=\"text\" name=\"destination\" value=\"");
      out.print( rs.getString("destination") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Departure Time:</label>\r\n");
      out.write("            <input type=\"datetime-local\" name=\"departure_time\" value=\"");
      out.print( rs.getString("departure_time") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Arrival Time:</label>\r\n");
      out.write("            <input type=\"datetime-local\" name=\"arrival_time\" value=\"");
      out.print( rs.getString("arrival_time") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Total Seats:</label>\r\n");
      out.write("            <input type=\"number\" name=\"total_seats\" value=\"");
      out.print( rs.getInt("total_seats") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Available Seats:</label>\r\n");
      out.write("            <input type=\"number\" name=\"available_seats\" value=\"");
      out.print( rs.getInt("available_seats") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label>Price:</label>\r\n");
      out.write("            <input type=\"number\" step=\"0.01\" name=\"price\" value=\"");
      out.print( rs.getDouble("price") );
      out.write("\" required>\r\n");
      out.write("            \r\n");
      out.write("            <button type=\"submit\">Update Flight</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        ");

                    }
                } catch (Exception e) {
                    out.println("<p class='error'>Error: " + e.getMessage() + "</p>");
                } finally {
                    if (rs != null) rs.close();
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                }
            }

            if ("POST".equalsIgnoreCase(request.getMethod())) {
                String flightnumber = request.getParameter("flightnumber");
                String airline_name = request.getParameter("airline_name");
                String source = request.getParameter("source");
                String destination = request.getParameter("destination");
                String departure_time = request.getParameter("departure_time");
                String arrival_time = request.getParameter("arrival_time");
                int total_seats = Integer.parseInt(request.getParameter("total_seats"));
                int available_seats = Integer.parseInt(request.getParameter("available_seats"));
                double price = Double.parseDouble(request.getParameter("price"));

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airline", "root", "root");
                    stmt = conn.prepareStatement("UPDATE flights SET flightnumber=?, airline_name=?, source=?, destination=?, departure_time=?, arrival_time=?, total_seats=?, available_seats=?, price=? WHERE flight_id=?");
                    stmt.setString(1, flightnumber);
                    stmt.setString(2, airline_name);
                    stmt.setString(3, source);
                    stmt.setString(4, destination);
                    stmt.setString(5, departure_time);
                    stmt.setString(6, arrival_time);
                    stmt.setInt(7, total_seats);
                    stmt.setInt(8, available_seats);
                    stmt.setDouble(9, price);
                    stmt.setInt(10, Integer.parseInt(flight_id));

                    int rows = stmt.executeUpdate();
                    if (rows > 0) {
                        out.println("<p class='message'>Flight updated successfully!</p>");
                    }
                } catch (Exception e) {
                    out.println("<p class='error'>Error: " + e.getMessage() + "</p>");
                } finally {
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
