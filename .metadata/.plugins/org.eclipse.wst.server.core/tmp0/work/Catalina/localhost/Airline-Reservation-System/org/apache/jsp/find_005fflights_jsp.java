/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-04-11 09:40:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public final class find_005fflights_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");

    if (session.getAttribute("user_id") == null) {
        response.sendRedirect("login.jsp");
        return;
    }

    int userId = (int) session.getAttribute("user_id");
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String jdbcURL = "jdbc:mysql://localhost:3306/airline";
    String dbUser = "root";
    String dbPassword = "root";

    String firstName = "", middleName = "", lastName = "", email = "", phone = "";

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);
        String userQuery = "SELECT first_name, middle_name, last_name, email, phone FROM user WHERE user_id = ?";
        pst = con.prepareStatement(userQuery);
        pst.setInt(1, userId);
        ResultSet userRs = pst.executeQuery();

        if (userRs.next()) {  
            firstName = userRs.getString("first_name");
            middleName = userRs.getString("middle_name") != null ? userRs.getString("middle_name") + " " : "";
            lastName = userRs.getString("last_name");
            email = userRs.getString("email");
            phone = userRs.getString("phone");
        }
        userRs.close();
        pst.close();
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        if (con != null) try { con.close(); } catch (Exception ignored) {}
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Find Flights | Airline Reservation</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("            background: #BCEDFF;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            color: #0E4A7B;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-back { background: white; }\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background: #2D82B5;\r\n");
      out.write("            padding: 15px 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar .logo {\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar span {\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            margin-right: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .logout-btn {\r\n");
      out.write("            background: #B90E0A;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: all 0.3s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("        .logout-btn:hover { \r\n");
      out.write("            background: #990F02;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .search-box {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .search-box select, .search-box input, .search-box button {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .search-box button {\r\n");
      out.write("            background: #0073A8;\r\n");
      out.write("            color: white;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        table, th, td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("                .book-button {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            background: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .book-button:hover {\r\n");
      out.write("            background: #218838;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <div class=\"logo\">Airline</div>\r\n");
      out.write("        <div>\r\n");
      out.write("            <span>Welcome, ");
      out.print( firstName );
      out.write(' ');
      out.print( middleName );
      out.write(' ');
      out.print( lastName );
      out.write("</span>\r\n");
      out.write("            <button class=\"logout-btn\" onclick=\"window.location.href='logout.jsp'\">Logout</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("	<br><br><a href=\"passengerdash.jsp\" class=\"btn btn-back\">Back To Dash</a>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    	<h3>Find Flights</h3>\r\n");
      out.write("        <form class=\"search-box\" method=\"GET\">\r\n");
      out.write("            <select name=\"source\">\r\n");
      out.write("                <option value=\"\">Source</option>\r\n");
      out.write("                ");

                    try {
                        con = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);
                        String sourceQuery = "SELECT DISTINCT source FROM flights";
                        pst = con.prepareStatement(sourceQuery);
                        rs = pst.executeQuery();
                        while (rs.next()) {
                
      out.write("\r\n");
      out.write("                <option value=\"");
      out.print( rs.getString("source") );
      out.write('"');
      out.write('>');
      out.print( rs.getString("source") );
      out.write("</option>\r\n");
      out.write("                ");

                        }
                        rs.close();
                        pst.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                
      out.write("\r\n");
      out.write("            </select>\r\n");
      out.write("\r\n");
      out.write("            <select name=\"destination\">\r\n");
      out.write("                <option value=\"\">Destination</option>\r\n");
      out.write("                ");

                    try {
                        String destinationQuery = "SELECT DISTINCT destination FROM flights";
                        pst = con.prepareStatement(destinationQuery);
                        rs = pst.executeQuery();
                        while (rs.next()) {
                
      out.write("\r\n");
      out.write("                <option value=\"");
      out.print( rs.getString("destination") );
      out.write('"');
      out.write('>');
      out.print( rs.getString("destination") );
      out.write("</option>\r\n");
      out.write("                ");

                        }
                        rs.close();
                        pst.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                
      out.write("\r\n");
      out.write("            </select>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"date\" name=\"departure_time\">\r\n");
      out.write("            <button type=\"submit\">Search</button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Flight No</th>\r\n");
      out.write("                <th>Airline</th>\r\n");
      out.write("                <th>Source</th>\r\n");
      out.write("                <th>Destination</th>\r\n");
      out.write("                <th>Departure</th>\r\n");
      out.write("                <th>Arrival</th>\r\n");
      out.write("                <th>Seats</th>\r\n");
      out.write("                <th>Price (₹)</th>\r\n");
      out.write("                <th>Action</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                try {
                    con = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);
                    String baseQuery = "SELECT * FROM flights WHERE available_seats > 0";
                    String source = request.getParameter("source");
                    String destination = request.getParameter("destination");
                    String date = request.getParameter("departure_time");
                    StringBuilder queryBuilder = new StringBuilder(baseQuery);
                    if (source != null && !source.isEmpty()) queryBuilder.append(" AND source = ?");
                    if (destination != null && !destination.isEmpty()) queryBuilder.append(" AND destination = ?");
                    if (date != null && !date.isEmpty()) queryBuilder.append(" AND DATE(departure_time) = ?");
                    pst = con.prepareStatement(queryBuilder.toString());
                    int index = 1;
                    if (source != null && !source.isEmpty()) pst.setString(index++, source);
                    if (destination != null && !destination.isEmpty()) pst.setString(index++, destination);
                    if (date != null && !date.isEmpty()) pst.setString(index++, date);
                    rs = pst.executeQuery();
                    while (rs.next()) {
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( rs.getString("flightnumber") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("airline_name") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("source") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("destination") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("departure_time") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("arrival_time") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("available_seats") );
      out.write("</td>\r\n");
      out.write("                <td>₹");
      out.print( rs.getDouble("price") );
      out.write("</td>\r\n");
      out.write("                <td><button class=\"book-button\" onclick=\"window.location.href='bookFlight.jsp?flight_id=");
      out.print( rs.getInt("flight_id") );
      out.write("'\">Book</button></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
