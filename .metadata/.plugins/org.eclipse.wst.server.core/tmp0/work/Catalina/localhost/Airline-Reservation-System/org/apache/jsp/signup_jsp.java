/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-08 15:34:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Sign Up | Airline Reservation</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        * { margin: 0; padding: 0; box-sizing: border-box; }\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("            background: linear-gradient(135deg, #fdfbfb, #ebedee, #e0f7fa, #f5f7fa);\r\n");
      out.write("            display: flex; justify-content: center; align-items: center;\r\n");
      out.write("            height: 100vh; text-align: center; color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.8); padding: 50px; border-radius: 30px;\r\n");
      out.write("            box-shadow: 0 25px 40px rgba(0, 0, 0, 0.15); width: 90%; max-width: 500px;\r\n");
      out.write("            backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.5);\r\n");
      out.write("        }\r\n");
      out.write("        h1 { font-size: 2rem; margin-bottom: 20px; color: #2c3e50; }\r\n");
      out.write("        input, select {\r\n");
      out.write("            width: 100%; padding: 12px; margin: 10px 0; border-radius: 8px;\r\n");
      out.write("            border: 1px solid #ccc; font-size: 1rem;\r\n");
      out.write("        }\r\n");
      out.write("        button {\r\n");
      out.write("            width: 100%; padding: 12px; background: linear-gradient(45deg, #81ecec, #74b9ff);\r\n");
      out.write("            color: #fff; font-size: 1rem; font-weight: bold; border-radius: 50px;\r\n");
      out.write("            transition: all 0.3s ease, transform 0.2s ease;\r\n");
      out.write("            border: none; cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background: linear-gradient(45deg, #74b9ff, #81ecec);\r\n");
      out.write("            transform: scale(1.1);\r\n");
      out.write("        }\r\n");
      out.write("        .error { color: red; font-size: 0.9rem; }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("    function validateForm() {\r\n");
      out.write("        let email = document.getElementById(\"email\").value;\r\n");
      out.write("        let confirmEmail = document.getElementById(\"confirm_email\").value;\r\n");
      out.write("        let password = document.getElementById(\"password\").value;\r\n");
      out.write("        let confirmPassword = document.getElementById(\"confirm_password\").value;\r\n");
      out.write("        let userType = document.getElementById(\"user_type\").value;\r\n");
      out.write("        let phone = document.getElementById(\"phone\").value;\r\n");
      out.write("\r\n");
      out.write("        if (email !== confirmEmail) {\r\n");
      out.write("            document.getElementById(\"email_error\").innerText = \"Emails do not match!\";\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById(\"email_error\").innerText = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (password !== confirmPassword) {\r\n");
      out.write("            document.getElementById(\"password_error\").innerText = \"Passwords do not match!\";\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById(\"password_error\").innerText = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (userType === \"\") {\r\n");
      out.write("            document.getElementById(\"user_type_error\").innerText = \"Please select a user type!\";\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById(\"user_type_error\").innerText = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Phone number validation: 10 digits only\r\n");
      out.write("        let phonePattern = /^\\d{10}$/;\r\n");
      out.write("        if (!phonePattern.test(phone)) {\r\n");
      out.write("            document.getElementById(\"phone_error\").innerText = \"Phone number must be exactly 10 digits!\";\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("            document.getElementById(\"phone_error\").innerText = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>üìù Sign Up</h1>\r\n");
      out.write("        <form action=\"signup.jsp\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("            <input type=\"text\" name=\"first_name\" placeholder=\"First Name\" required>\r\n");
      out.write("            <input type=\"text\" name=\"middle_name\" placeholder=\"Middle Name\">\r\n");
      out.write("            <input type=\"text\" name=\"last_name\" placeholder=\"Last Name\" required>\r\n");
      out.write("            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required>\r\n");
      out.write("            <input type=\"email\" name=\"confirm_email\" id=\"confirm_email\" placeholder=\"Confirm Email\" required>\r\n");
      out.write("            <span class=\"error\" id=\"email_error\"></span>\r\n");
      out.write("            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required>\r\n");
      out.write("            <input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" placeholder=\"Confirm Password\" required>\r\n");
      out.write("            <span class=\"error\" id=\"password_error\"></span>\r\n");
      out.write("            <input type=\"text\" name=\"phone\" placeholder=\"Phone\" required>\r\n");
      out.write("            <select name=\"user_type\" id=\"user_type\" required>\r\n");
      out.write("                <option value=\"\">Select User Type</option>\r\n");
      out.write("                <option value=\"Passenger\">Passenger</option>\r\n");
      out.write("                <option value=\"Admin\">Admin</option>\r\n");
      out.write("            </select>\r\n");
      out.write("            <span class=\"error\" id=\"user_type_error\"></span>\r\n");
      out.write("            <button type=\"submit\">Sign Up</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <p>Already have an account? <a href=\"login.jsp\">Login</a></p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 
        if (request.getMethod().equalsIgnoreCase("post")) {
            String firstName = request.getParameter("first_name");
            String middleName = request.getParameter("middle_name");
            String lastName = request.getParameter("last_name");
            String email = request.getParameter("email");
            String password = request.getParameter("password");
            String phone = request.getParameter("phone");
            String userType = request.getParameter("user_type");

            Connection conn = null;
            PreparedStatement stmt = null;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airline", "root", "root");
                String sql = "INSERT INTO user (first_name, middle_name, last_name, email, password, phone, user_type) VALUES (?, ?, ?, ?, ?, ?, ?)";
                stmt = conn.prepareStatement(sql);
                stmt.setString(1, firstName);
                stmt.setString(2, middleName);
                stmt.setString(3, lastName);
                stmt.setString(4, email);
                stmt.setString(5, password);
                stmt.setString(6, phone);
                stmt.setString(7, userType);

                int rowsInserted = stmt.executeUpdate();
                if (rowsInserted > 0) {
    
      out.write("\r\n");
      out.write("                    <script>alert(\"Sign-up successful! Redirecting to login page.\"); window.location.href = \"login.jsp\";</script>\r\n");
      out.write("    ");

                }
            } catch (Exception e) {
    
      out.write("\r\n");
      out.write("                <p class='error'>Error: ");
      out.print( e.getMessage() );
      out.write("</p>\r\n");
      out.write("    ");

            } finally {
                try { if (stmt != null) stmt.close(); if (conn != null) conn.close(); } catch (SQLException ignored) {}
            }
        }
    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
