/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-04-07 15:04:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class manage_005fbookings_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Manage Bookings | Admin Panel</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Poppins', sans-serif; }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            background: #BCEDFF;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            color: #0E4A7B;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .top-controls {\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            max-width: 1000px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            transition: 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-bar {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-bar input[type=\"text\"] {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            width: 250px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-bar input[type=\"submit\"] {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            background-color: #2D82B5;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-bar input[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #015C92;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            max-width: 1000px;\r\n");
      out.write("            background: white;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 12px;\r\n");
      out.write("            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            color: #015C92;\r\n");
      out.write("            font-size: 28px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background: #3498db;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background: #f1f1f1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .action-btns a {\r\n");
      out.write("            padding: 5px 10px;\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .edit {\r\n");
      out.write("            background: #2ecc71;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .delete {\r\n");
      out.write("            background: #e74c3c;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- Top Controls: Back + Search -->\r\n");
      out.write("    <div class=\"top-controls\">\r\n");
      out.write("        <a href=\"admindash.jsp\" class=\"btn\">← Back to Dashboard</a>\r\n");
      out.write("        <form class=\"search-bar\" method=\"get\">\r\n");
      out.write("            <input type=\"text\" name=\"search\" placeholder=\"Search by Booking ID, User ID or Flight ID\" value=\"");
      out.print( request.getParameter("search") != null ? request.getParameter("search") : "" );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Search\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Manage Bookings</h1>\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Booking ID</th>\r\n");
      out.write("                <th>User ID</th>\r\n");
      out.write("                <th>Flight ID</th>\r\n");
      out.write("                <th>Booking Date</th>\r\n");
      out.write("                <th>Seat Number</th>\r\n");
      out.write("                <th>Status</th>\r\n");
      out.write("                <th>Actions</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                Connection conn = null;
                PreparedStatement stmt = null;
                ResultSet rs = null;
                String searchTerm = request.getParameter("search");

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/airline", "root", "root");

                    String sql;
                    if (searchTerm != null && !searchTerm.trim().isEmpty()) {
                        sql = "SELECT * FROM bookings WHERE CAST(booking_id AS CHAR) LIKE ? OR CAST(user_id AS CHAR) LIKE ? OR CAST(flight_id AS CHAR) LIKE ?";
                        stmt = conn.prepareStatement(sql);
                        String searchPattern = "%" + searchTerm + "%";
                        stmt.setString(1, searchPattern);
                        stmt.setString(2, searchPattern);
                        stmt.setString(3, searchPattern);
                    } else {
                        sql = "SELECT * FROM bookings";
                        stmt = conn.prepareStatement(sql);
                    }

                    rs = stmt.executeQuery();

                    while (rs.next()) {
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("booking_id") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("user_id") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("flight_id") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getDate("booking_date") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("seat_number") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("status") );
      out.write("</td>\r\n");
      out.write("                <td class=\"action-btns\">\r\n");
      out.write("                    <a href=\"edit_booking.jsp?booking_id=");
      out.print( rs.getInt("booking_id") );
      out.write("\" class=\"edit\">Edit</a>\r\n");
      out.write("                    <a href=\"delete_booking.jsp?booking_id=");
      out.print( rs.getInt("booking_id") );
      out.write("\" class=\"delete\" onclick=\"return confirm('Are you sure you want to delete this booking?');\">Delete</a>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

                    }
                } catch (Exception e) {
                    e.printStackTrace();
            
      out.write("\r\n");
      out.write("                <tr><td colspan=\"7\" style=\"color:red;\">Error fetching bookings!</td></tr>\r\n");
      out.write("            ");

                } finally {
                    try { if (rs != null) rs.close(); if (stmt != null) stmt.close(); if (conn != null) conn.close(); } catch (SQLException ignored) {}
                }
            
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
