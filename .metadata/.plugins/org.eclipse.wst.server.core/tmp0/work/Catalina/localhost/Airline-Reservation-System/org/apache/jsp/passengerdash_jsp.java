/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-04-11 09:49:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class passengerdash_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    // Check if the passenger is logged in
    String passengerEmail = (String) session.getAttribute("userEmail");
    String userType = (String) session.getAttribute("userType");
    
    if (passengerEmail == null || !"passenger".equalsIgnoreCase(userType)) {
        response.sendRedirect("login.jsp");
        return;
    }
    
    int userId = (int) session.getAttribute("user_id");
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String jdbcURL = "jdbc:mysql://localhost:3306/airline";
    String dbUser = "root";
    String dbPassword = "root";
    
    String firstName = "", middleName = "", lastName = "";
    
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);
        String userQuery = "SELECT first_name, middle_name, last_name FROM user WHERE user_id = ?";
        pst = con.prepareStatement(userQuery);
        pst.setInt(1, userId);
        ResultSet userRs = pst.executeQuery();

        if (userRs.next()) {  
            firstName = userRs.getString("first_name");
            middleName = userRs.getString("middle_name") != null ? userRs.getString("middle_name") + " " : "";
            lastName = userRs.getString("last_name");
        }
        userRs.close();
        pst.close();
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        if (con != null) try { con.close(); } catch (Exception ignored) {}
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Passenger Dashboard | Airline Reservation</title>\r\n");
      out.write("    <style>\r\n");
      out.write("* { \r\n");
      out.write("    margin: 0; padding: 0; box-sizing: border-box; font-family: 'Poppins', sans-serif; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body { \r\n");
      out.write("    background: #BCEDFF; /* Light Blue Background */\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    color: #0E4A7B; /* Deep Blue Text for contrast */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Navbar Styling */\r\n");
      out.write(".navbar {\r\n");
      out.write("    background: #2D82B5; /* Lighter Blue */\r\n");
      out.write("    padding: 15px 20px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar a {\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    margin-right: 15px;\r\n");
      out.write("    padding: 10px 15px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    transition: all 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar a:hover {\r\n");
      out.write("    background: rgba(255, 255, 255, 0.25);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logout-btn {\r\n");
      out.write("    background: #B90E0A; /* Lighter Blue */\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: none;\r\n");
      out.write("    padding: 10px 15px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: all 0.3s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logout-btn:hover { \r\n");
      out.write("    background: #990F02; /* Darker Blue */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Container */\r\n");
      out.write(".container {\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    background: white;\r\n");
      out.write("    border-radius: 12px;\r\n");
      out.write("    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("    color: #015C92; /* Deep Blue */\r\n");
      out.write("    font-size: 28px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    color: #2D6B25; /* Dark Green Accent */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Flights Table */\r\n");
      out.write(".flight-table {\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    background: white;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".flight-table th, .flight-table td {\r\n");
      out.write("    padding: 12px 15px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border-bottom: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".flight-table th {\r\n");
      out.write("    background-color: #2D82B5;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".flight-table tr:nth-child(even) {\r\n");
      out.write("    background-color: #f2f2f2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-btn {\r\n");
      out.write("    background: #2D6B25;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 6px 12px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-btn:hover {\r\n");
      out.write("    background: #1E4E1F;\r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <a href=\"passengerdash.jsp\">Dashboard</a>\r\n");
      out.write("            <a href=\"find_flights.jsp\">Search Flights</a>\r\n");
      out.write("            <a href=\"my_bookings.jsp\">My Bookings</a>\r\n");
      out.write("            <a href=\"my_payments.jsp\">Payments</a>\r\n");
      out.write("            <a href=\"edit_profile.jsp\">My Profile</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <form action=\"logout.jsp\" method=\"post\">\r\n");
      out.write("            <button type=\"submit\" class=\"logout-btn\">Logout</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Welcome, ");
      out.print( firstName );
      out.write(' ');
      out.print( middleName );
      out.write(' ');
      out.print( lastName );
      out.write("!</h1>\r\n");
      out.write("        <p>Find and book your next flight with ease.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Available Flights</h1>\r\n");
      out.write("        ");

            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection(jdbcURL, dbUser, dbPassword);
                String query = "SELECT * FROM flights WHERE available_seats > 0 ORDER BY departure_time ASC";
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
        
      out.write("\r\n");
      out.write("        <table class=\"flight-table\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Flight No</th>\r\n");
      out.write("                <th>Airline</th>\r\n");
      out.write("                <th>From</th>\r\n");
      out.write("                <th>To</th>\r\n");
      out.write("                <th>Departure</th>\r\n");
      out.write("                <th>Arrival</th>\r\n");
      out.write("                <th>Price (₹)</th>\r\n");
      out.write("                <th>Seats Left</th>\r\n");
      out.write("                <th>Action</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        ");

            while(rs.next()) {
        
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( rs.getString("flightnumber") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("airline_name") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("source") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getString("destination") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getTimestamp("departure_time") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getTimestamp("arrival_time") );
      out.write("</td>\r\n");
      out.write("                <td>₹");
      out.print( rs.getDouble("price") );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( rs.getInt("available_seats") );
      out.write("</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <form action=\"bookFlight.jsp\" method=\"get\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"flight_id\" value=\"");
      out.print( rs.getInt("flight_id") );
      out.write("\">\r\n");
      out.write("                        <button type=\"submit\" class=\"book-btn\">Book Now</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        ");

            }
            rs.close();
            pst.close();
        } catch(Exception e) {
            out.println("<p style='color:red;'>Error loading flights.</p>");
            e.printStackTrace();
        } finally {
            if (con != null) try { con.close(); } catch (Exception ignored) {}
        }
        
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
